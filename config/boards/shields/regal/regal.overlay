/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "regal";

    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &transform;
    };


    transform_transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <3>;
        columns = <6>;

//      | SW01  | SW02  | SW03  | SW04  | TK01  |  EN01  |
//      | SW05  | SW06  | SW07  | SW08  | TK02  |
//              | SW09  | SW10  | SW11  | TK03  | 

        map = <
         RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)
         RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)
                 RC(2,1) RC(2,2) RC(2,3) RC(2,4)
        >;
    }; 


    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        label = "KSCAN.0";
        rows = <3>;
        columns = <6>;

        matrix {
            kscan = <&kscan1>;
        };

        direct {
            kscan = <&kscan2>;
            column-offset = <5>; 
        };
    };


    kscan1: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN.1";

        diode-direction = "col2row"; 

        col-gpios
            = <&xiao_d 0 GPIO_ACTIVE_HIGH>
            , <&xiao_d 1 GPIO_ACTIVE_HIGH>
            , <&xiao_d 2 GPIO_ACTIVE_HIGH>
            , <&xiao_d 3 GPIO_ACTIVE_HIGH>
            , <&xiao_d 4 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&xiao_d 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    kscan2: kscan_direct {
        label = "KSCAN.2";
        input-gpios
            = <&xiao_d 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

   encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        resolution = <4>;
        a-gpios = <&xiao_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&xiao_d 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    };
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
    };
};



&encoder {
    status = "okay";
};