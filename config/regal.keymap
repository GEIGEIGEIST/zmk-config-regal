//                                                      ▀▀▀█
//               ▄▄▄▄      ▄▄▄      ▄▄▄▄▄      ▄▄▄▄▄       █
//               █        █▄▄▄█    █    █     █    █       █
//            ▄▄▄█▄▄▄     ▀▄▄▄     ▀▄▄▄▄█     ▀▄▄▄▀█    ▄▄▄█▄▄▄
//                                  ▄▄▄▄▀  


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
//#include <dt-bindings/zmk/mouse.h>

#define CALLI1  0
#define CALLI2  1
#define KRITA1  2
#define KRITA2  3

/ {
    behaviors {

        k_rot: k_rot_reset {
            compatible = "zmk,behavior-tap-dance";
            label = "Rotation_Reset";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LC(SPACE)>, <&kp LS(R)>;
        };

        k_unsav: t_unsav {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_UndoSave";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_save>, <&kp>;
        };

        k_resav: t_resav {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_RedoSaveInc";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_saveinc>, <&kp>;
        };

        k_plbs: k_plbs {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_PlayBrushsize";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        k_sel: k_sel {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_SelectDeselect";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_dsel>, <&kp>;
        };

        c_sel: c_sel {
            compatible = "zmk,behavior-hold-tap";
            label = "CALLI_SelectDeselect";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&c_dsel>, <&kp>;
        };

        k_move: k_move {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_Move";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_dsel>, <&kp>;
        };

        k_trans: k_trans {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_Transform";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_cltrans>, <&kp>;
        };

        c_trans: c_trans {
            compatible = "zmk,behavior-hold-tap";
            label = "CALLI_Transform";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&c_cltrans>, <&kp>;
        };

    };

    macros {
        
        c_split: c_split {
            label = "c_split";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp B>
                , <&macro_release &kp LCTRL>
                ;
        };

        c_mac: c_mac {
            label = "ctrl_macro";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LCTRL>
                ;
        };

        k_save: k_save {
            label = "KRITA_Save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(S)>
                ;
        };

        k_saveinc: k_saveinc {
            label = "KRITA_SaveInc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(LA(S))>
                ;
        };

        k_alay: k_alay {
            label = "KRITA_NewAnimLayer";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(L)>
                , <&macro_tap &kp K>
                ;
        };

        k_dsel: k_dsel {
            label = "KRITA_Deselect";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp D>
                , <&macro_tap &kp B>
                ;
        };

        c_dsel: c_dsel {
            label = "CALLI_Deselect";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(T)>
                , <&macro_tap &kp RETURN>
                , <&macro_tap &kp B>
                ;
        };

        k_cltrans: k_cltrans {
            label = "KRITA_ClearTrans";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RETURN>
                , <&macro_tap &k_dsel>
                ;
        };

        c_cltrans: c_cltrans {
            label = "CALLI_ClearTrans";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RETURN>
                ;
        };

    };

// ───────────────────────────────────────────────────────────────────────────

        keymap {
                compatible = "zmk,keymap";

                calli1_layer {
// ┌───────────────────────────────────┐
label= "CALLI1"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ SHIFT     │ NEXT KEY  │ SPLIT LAY │ PREV KEY  ││ UNDO      ││           │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │ CALLI2    │ NXT FRAME │ RETURN    │ PRV FRAME ││ SEL/DSEL  │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │ PASTE     │ CLEAR     │ COPY      ││ PLAY      │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &kp LSHFT   &kp LC(RIGHT) &c_split &kp LC(LEFT) &kp LC(Y)    &none
    &lt CALLI2 L &kp RIGHT  &kp RET     &kp LEFT     &c_sel 0 S
                &kp LC(C)   &kp BSPC    &kp LC(V)    &kp SPACE   
                        >;
            sensor-bindings = <&inc_dec_kp DOWN UP>; // NEXT LAYER / PREV LAYER
                };   

// ───────────────────────────────────────────────────────────────────────────

                calli2_layer {
// ┌───────────────────────────────────┐
label= "CALLI2"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ BT CLEAR  │    ---    │ TRANSFORM │    ---    ││ REDO      ││ PLAYPAUSE │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │    ---    │ NEXT KEY  │    ---    │ PREV KEY  ││ TRANSFORM │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │    ---    │    ---    │ CUT       ││    ---    │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &bt BT_CLR  &trans      &kp LCTRL   &c_mac T    &kp LC(LS(Y)) &kp C_PP
    &trans      &kp LC(RIGHT) &kp T    &kp LC(LEFT) &c_trans 0 LC(T)
                &kp LSHIFT   &kp LALT   &kp LGUI    &trans      
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>; // VOL DOWN / VOL UP
                };


// ───────────────────────────────────────────────────────────────────────────

                krita1_layer {
// ┌───────────────────────────────────┐
label= "KRITA1"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ SHIFT     │ MARK OUT  │ ROT/RESET │ MARK IN   ││ UNDO/SAVE ││ FSCREEN   │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │ KRITA2    │ NXT FRAME │ PAN       │ PRV FRAME ││ SEL/DSEL  │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │ PASTE KF  │ CLEAR     │ COPY KF   ││ PLAY      │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &kp LSHFT   &kp O       &k_rot      &kp I        &k_unsav 0 LC(Z) &kp TAB
    &lt KRITA2 L &kp RIGHT  &kp LALT    &kp LEFT     &k_sel 0 S
              &kp LC(LA(V)) &kp DEL     &kp LC(LA(C)) &k_plbs Z SPACE   
                        >;
            sensor-bindings = <&inc_dec_kp LC(W) LC(LS(W))>; // NEW HOLD / DEL HOLD
                };   

// ───────────────────────────────────────────────────────────────────────────

                krita2_layer {
// ┌───────────────────────────────────┐
label= "KRITA2"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ FSCREEN   │ NEW LAYER │ DEL LAYER │ NEW ALAY  ││ REDO/SAVE ││           │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │    ---    │ NEXT KEY  │ NEW KEY   │ PREV KEY  ││ MOVE      │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │ PASTE     │ DEL KEY   │ COPY      ││ TRANSFORM │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &kp TAB     &kp LC(L)     &kp LC(BSPC) &k_alay &kp LC(LS(Z)) &trans
    &trans      &kp LS(RIGHT) &kp K     &kp LS(LEFT) &k_move 0 M
                &kp LC(LS(V)) &kp LS(DEL) &kp LC(C)  &k_trans 0 T        
                        >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>; // NEXT LAYER / PREV LAYER
                };


// ─────────────────────────────────────────────────────────────────────────── 

        };
};

