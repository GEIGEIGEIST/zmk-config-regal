//                                                      ▀▀▀█
//               ▄▄▄▄      ▄▄▄      ▄▄▄▄▄      ▄▄▄▄▄       █
//               █        █▄▄▄█    █    █     █    █       █
//            ▄▄▄█▄▄▄     ▀▄▄▄     ▀▄▄▄▄█     ▀▄▄▄▀█    ▄▄▄█▄▄▄
//                                  ▄▄▄▄▀  


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
//#include <dt-bindings/zmk/mouse.h>

#define KRITA1  0
#define KRITA2  1

/ {
    behaviors {

        k_rot: k_rot_reset {
            compatible = "zmk,behavior-tap-dance";
            label = "Rotation_Reset";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LC(SPACE)>, <&kp LS(R)>;
        };


        k_unsav: t_unsav {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_UndoSave";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_save>, <&kp>;
        };


        k_sel: k_sel {
            compatible = "zmk,behavior-hold-tap";
            label = "KRITA_SelectDeselect";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&k_dsel>, <&kp>;
        };

        t_lay: t_lay {
            compatible = "zmk,behavior-hold-tap";
            label = "TVP_NewDelLay";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&t_del_l>, <&kp>;
        };

        t_imark: t_imark {
            compatible = "zmk,behavior-hold-tap";
            label = "TVP_ImageMark";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&t_clim>, <&kp>;
        };

        t_bmark: t_bmark {
            compatible = "zmk,behavior-hold-tap";
            label = "TVP_BookMark";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&t_clbm>, <&kp>;
        };



        t_move: t_move {
            compatible = "zmk,behavior-hold-tap";
            label = "TVP_Move";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&t_clmove>, <&kp>;
        };

        t_trans: t_trans {
            compatible = "zmk,behavior-hold-tap";
            label = "TVP_Transform";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <1000>;
            global-quick-tap;
            bindings = <&t_cltrans>, <&kp>;
        };

    };

    macros {

        k_save: k_save {
            label = "KRITA_Save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(S)>
                ;
        };

        k_dsel: k_dsel {
            label = "KRITA_Deselect";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LC(D)>
                ;
        };

        t_erase: t_erase {
            label = "TVP_Erase";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp E>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LS(E)>
                ;
        };



        t_del_l: t_del_l {
            label = "TVP_DeleteLayer";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LS(A)>
                ;
        };

        t_clim: t_clim {
            label = "TVP_ClearImageMark";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LS(Y)>
                ;
        };

        t_clbm: t_clbm {
            label = "TVP_ClearBookMark";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LS(B)>
                ;
        };

        t_clmove: t_clmove {
            label = "TVP_ClearMove";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp D>
                ;
        };

        t_cltrans: t_cltrans {
            label = "TVP_ClearTrans";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp RETURN>
                , <&macro_tap &kp D>
                , <&macro_tap &kp P>
                ;
        };

    };

// ───────────────────────────────────────────────────────────────────────────

        keymap {
                compatible = "zmk,keymap";

                krita1_layer {
// ┌───────────────────────────────────┐
label= "KRITA1"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ SHIFT     │ MARK OUT  │ ROT/RESET │ MARK IN   ││ UNDO/SAVE ││           │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │ KRITA2    │ NXT FRAME │ PAN       │ PRV FRAME ││ PLAY      │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │ PASTE KF  │ DEL       │ COPY KF   ││ SEL/DSEL  │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &kp LSHFT   &kp O       &k_rot      &kp I        &k_unsav 0 LC(Z) &trans
    &lt KRITA2 L &kp RIGHT  &kp LALT    &kp LEFT     &kp SPACE
              &kp LA(LS(V)) &kp DEL   &kp LA(LS(C))  &k_sel             
                        >;
            sensor-bindings = <&inc_dec_kp LC(W) LC(LS(W)) >; // NEW HOLD / DEL HOLD
                };   

// ───────────────────────────────────────────────────────────────────────────

                krita_layer2 {
// ┌───────────────────────────────────┐
label= "KRITA2"                        ;
// └───────────────────────────────────┘
// ┌───────────┬───────────┬───────────┬───────────┐╭───────────╮╭───────────╮
// │ FSCREEN   │           │ DEL LAYER │           ││ FSCREEN   ││           │
// ├───────────┼───────────┼───────────┼───────────┤├───────────┤╰───────────╯
// │    ---    │ NXT KEY   │ NEW KEY   │ PRV KEY   ││ MOVE      │
// └───────────┼───────────┼───────────┼───────────┤├───────────┤
//             │ PASTE     │ DEL HEAD  │ COPY      ││ TRANSFORM │
//             └───────────┴───────────┴───────────┘╰───────────╯
 bindings = <
// ╷           ╷           ╷           ╷           ╷╷           ╷╷           ╷

    &kp TAB     &trans      &kp LS(BSPC) &trans       &kp TAB      &trans
    &trans      &kp LS(RIGHT) &kp LA(K)  &kp LS(LEFT) &k_move 0 M
                &kp LA(LC(V)) &kp LS(DEL) &kp LC(C)   &k_trans 0 T         
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>; // VOL UP / VOL DOWN
                };
        };
};
